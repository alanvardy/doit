defmodule Doit.Todoist.Notification do
  @moduledoc """
  Regularly scheduled items generated in this app and sent through todoist
  Excludes items generated by external services such as GitHub
  """
  use Ecto.Schema
  import Ecto.Changeset

  @timestamps_opts [type: :utc_datetime]
  @type type :: :last_24 | :last_week

  schema "notifications" do
    field :type, Ecto.Enum, values: [:last_24, :last_week]
    field :data, :map

    timestamps()
  end

  @spec changeset(%{type: type, data: map}) :: Ecto.Changeset.t()
  @doc false
  def changeset(attrs) do
    %__MODULE__{}
    |> cast(attrs, [:type, :data])
    |> validate_required([:type, :data])
  end
end
